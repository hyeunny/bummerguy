<!DOCTYPE html>
<html>
<head>
  <script src="http://code.createjs.com/createjs-2013.02.12.min.js"></script>
  <style type="text/css">
    body {
      background-color: #EEE;
    }

    canvas {
      position: absolute;
      width: 720px;
      height: 624px;
      left: 50%;
      top: 50%;
      margin-left: -360px;
      margin-top: -312px;
      background-color: #666;

      /* Retro-ified */
      image-rendering: optimizeSpeed;
      image-rendering:-o-crisp-edges;
      image-rendering:-webkit-optimize-contrast;
      -ms-interpolation-mode: nearest-neighbor;
    }
  </style>

  <script src="http://code.jquery.com/jquery-1.9.1.min.js" type="text/javascript"></script>
  <script type="text/javascript">
      
    $(function() {
      var FPS = 30;
      var TILE_WIDTH = 16;
      var TILE_HEIGHT = 16;
      var CANVAS_WIDTH = 240;
      var CANVAS_HEIGHT = 208;
      var BOMBERMAN_HEIGHT = 25;
      var BOMBERMAN_WIDTH = 14;
      var BOMBERMAN_POS_X = 34;
      var BOMBERMAN_POS_Y = 46;
      var START_X = TILE_WIDTH;
      var START_Y = TILE_HEIGHT;
      window.players = [];

      var ctx = null,
          background = null,
          bomberman = null,
          interval = null,
          bombs = [];

      // From: http://www.htmlgoodies.com/html5/tutorials/create-an-object-oriented-javascript-class-constructor.html#fbid=EYauP6cfQH6
      var Class = function(methods) {   
        var klass = function() {    
          this.initialize.apply(this, arguments);          
        };  

        for (var property in methods) { 
          klass.prototype[property] = methods[property];
        }
              
        if (!klass.prototype.initialize) klass.prototype.initialize = function(){};      

        return klass;    
      }

      window.player = {
        id: 0,
        x: 24,
        y: 24,
        direction: 0,
        directions: { left: 0, right: 1, up: 2, down: 3},
        moving: false,
        collision: { x: -8, y: -8, w: 16, h: 16},
        graphics: {x:-8,y:-16,w:16,h:24},
        movement : [{x: -100, y:0},{x: 100,y:0},{x:0,y:-100},{x:0,y:100}],
        
        draw: function(){
            ctx.drawImage(bomberman, 34 , 46, BOMBERMAN_WIDTH, BOMBERMAN_HEIGHT, this.x+this.graphics.x, this.y+this.graphics.y, BOMBERMAN_WIDTH, BOMBERMAN_HEIGHT);

        },

        bindToKeyboard: function(){
            var p=this; //scope into the jquery callbacks
            $(document).keydown(function(e){
                switch(e.keyCode){
                    case 37: 
                        p.move(player.directions.left);
                        break;
                    case 39: 
                        p.move(player.directions.right);
                        break;
                    case 38:
                        p.move(player.directions.up);
                        break;
                    case 40:
                        p.move(player.directions.down);
                        break;
                }
            });
            $(document).keyup(function(e){
                switch(e.keyCode){
                    case 37: 
                        p.stop(player.directions.left);
                        break;
                    case 39: 
                        p.stop(player.directions.right);
                        break;
                    case 38:
                        p.stop(player.directions.up);
                        break;
                    case 40:
                        p.stop(player.directions.down);
                        break;
                }
            });
        },

        bindToServer: function(){
            
        },
        move: function(direction){
            if(this.moving) return;
            this.moving=true;
            this.direction=direction;
        },
        stop: function(direction){
            if(direction==this.direction){
                this.moving=false;
            }
        },

        update: function(timestep){
            if(this.moving){
                this.x += this.movement[this.direction].x * timestep;
                this.y += this.movement[this.direction].y * timestep;
                
                //todo: collision detection here
            }
        }
 
      }  
    


      var Bomb = Class({
        TIME_TILL_EXPLODE: 2,
        TIME_TILL_DESTROY: 5,
        x: 0,
        y: 0,
        width: 16,
        height: 16,
        pos_x: 0,
        pos_y: 0,
        curTicks: 0,
        isExploded: false,

        initialize: function(tileX, tileY) {
          this.x = tileX * TILE_WIDTH;
          this.y = tileY * TILE_HEIGHT;
          bombs.push(this);
        },

        update: function() {
          this.curTicks++;
          if (this.curTicks == this.TIME_TILL_EXPLODE * FPS) {
            this.isExploded = true;
          }
          else if (this.curTicks == this.TIME_TILL_DESTROY * FPS) {
            var idx = bombs.indexOf(this);
            bombs.splice(idx, 1);
          }
        },

        draw: function() {
          if (!this.isExploded) {
          ctx.drawImage(this.x, this.y, pos_x, pos_y, width, height);  
          }
          else {
            // Left flame
            ctx.fillRect(this.x - TILE_WIDTH * 2, this.y, TILE_WIDTH * 2, TILE_HEIGHT);
            // Right flame
            ctx.fillRect(this.x + TILE_WIDTH, this.y, TILE_WIDTH * 2, TILE_HEIGHT);
            // Top flame
            ctx.fillRect(this.x, this.y - TILE_HEIGHT * 2, TILE_WIDTH, TILE_HEIGHT * 2);
            // Bottom flame
            ctx.fillRect(this.x, this.y + TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT * 2);
          }
        }
      });

      function drawBackground() {
        // Draw top border
        for (var x = 0; x < CANVAS_WIDTH; x += TILE_WIDTH) {
          ctx.drawImage(background, 0, 0, TILE_WIDTH, TILE_HEIGHT, x, 0, TILE_WIDTH, TILE_HEIGHT);
        }

        // Draw bottom border
        var y = CANVAS_HEIGHT - TILE_HEIGHT;
        for (var x = 0; x < CANVAS_WIDTH; x += TILE_WIDTH) {
          ctx.drawImage(background, 0, 0, TILE_WIDTH, TILE_HEIGHT, x, y, TILE_WIDTH, TILE_HEIGHT);
        }

        // Draw left border
        for (var y = 0; y < CANVAS_HEIGHT; y += TILE_HEIGHT) {
          ctx.drawImage(background, 0, 0, TILE_WIDTH, TILE_HEIGHT, 0, y, TILE_WIDTH, TILE_HEIGHT);
        }

        // Draw right border
        var x = CANVAS_WIDTH - TILE_WIDTH;
        for (var y = 0; y < CANVAS_HEIGHT; y += TILE_HEIGHT) {
          ctx.drawImage(background, 0, 0, TILE_WIDTH, TILE_HEIGHT, x, y, TILE_WIDTH, TILE_HEIGHT);
        }

        // Draw grass
        for (var y = TILE_HEIGHT; y < CANVAS_HEIGHT - TILE_HEIGHT; y += TILE_HEIGHT) {
          for (var x = TILE_WIDTH; x < CANVAS_WIDTH - TILE_WIDTH; x += TILE_WIDTH) {
            ctx.drawImage(background, TILE_WIDTH, TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT, x, y, TILE_WIDTH, TILE_HEIGHT);
          }
        }

        // Draw inside indestructible blocks
        for (var y = TILE_HEIGHT * 2; y < CANVAS_HEIGHT - TILE_HEIGHT * 2; y += TILE_HEIGHT * 2) {
          for (var x = TILE_WIDTH * 2; x < CANVAS_WIDTH - TILE_WIDTH * 2; x += TILE_WIDTH * 2) {
            ctx.drawImage(background, 0, 0, TILE_WIDTH, TILE_HEIGHT, x, y, TILE_WIDTH, TILE_HEIGHT);
          }
        }
      }

      function drawBomberman(x, y){
        // Draw bomberman
        ctx.drawImage(bomberman, BOMBERMAN_POS_X , BOMBERMAN_POS_Y, BOMBERMAN_WIDTH, BOMBERMAN_HEIGHT, x, y, BOMBERMAN_WIDTH, BOMBERMAN_HEIGHT);
      }
      
      window.createBomb = function(tileX, tileY) {
        new Bomb(tileX, tileY);
      }

      function update() {
        for (var i = 0; i < bombs.length; i++) {
          bombs[i].update();
        }
        for(var i=0;i<players.length;i++){
            players[i].update();    
        }
      }

      function draw() {
        drawBackground();
        for (var i = 0; i < bombs.length; i++) {
            bombs[i].draw();
        }
        for(var i=0;i<players.length;i++){
            players[i].draw();    
        }
        drawBomberman(START_X, START_Y);
      }

      function start() {
        players[0] = $.extend({},player);
        players[0].bindToKeyboard();

        // This is where the magic begins, my friends
        var run = (function() {
          var loops = 0, skipTicks = 1000 / 30,
              maxFrameSkip = 10,
              nextGameTick = (new Date).getTime();
          
          return function() {
            loops = 0;
            
            while ((new Date).getTime() > nextGameTick && loops < maxFrameSkip) {
              update();
              nextGameTick += skipTicks;
              loops++;
            }
            
            draw();
          };
        })();

        interval = setInterval(run, 0);
      }

      function init() {
        // Prepare canvas
        $('canvas').attr('width', CANVAS_WIDTH).attr('height', CANVAS_HEIGHT);
        ctx = $('canvas').get(0).getContext('2d');
        // Retro-ified
        ctx.imageSmoothingEnabled = false;
        ctx.mozImageSmoothingEnabled = false;
        ctx.webkitImageSmoothingEnabled = false;

        // Load background
        background = new Image();
        background.src = "images/background.png";

        background.onload = function() {
          bomberman = new Image();
          bomberman.src = "images/bomberman.png";

          bomberman.onload = function(){
            start();
          };
        };

      }

      init();
    });

    function TextureManager(){

    }

  </script>
</head>
<body>
  <canvas></canvas>
</body>
</html>
